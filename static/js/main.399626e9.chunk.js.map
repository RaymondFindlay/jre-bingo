{"version":3,"sources":["components/Tile.js","components/TileContainer.js","App.js","index.js"],"names":["Tile","id","content","callbackFunction","useState","isTileChecked","setTileChecked","className","style","background","textDecoration","onClick","TileContainer","bingo","constuctBingoArrayCallback","checked","push","index","indexOf","splice","length","TileData","alert","tiles","map","tile","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"olCAyBeA,EAvBF,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,iBAAuB,EACRC,oBAAS,GADD,mBACzCC,EADyC,KAC1BC,EAD0B,KAShD,OACI,yBACIC,UAAU,OACVC,MAAO,CACHC,WAAYJ,EAAgB,UAAY,GACxCK,eAAgBL,EAAgB,eAAiB,IAErDM,QAZoB,WACxBL,GAAgBD,GAChBF,GAAkBE,EAAeJ,KAY5BC,I,OCqBEU,EArCO,WAElB,IAAIC,EAAQ,GAENC,EAA6B,SAACC,EAASd,GACzC,GAAIc,EACAF,EAAMG,KAAKf,OACR,CACH,IAAIgB,EAAQJ,EAAMK,QAAQjB,GACtBgB,GAAS,GACTJ,EAAMM,OAAOF,EAAO,GAIxBJ,EAAMO,SAAWC,EAASD,QAC1BE,MAAM,WAIRC,EAAQF,EAASG,KAAI,SAACC,GACxB,OACI,kBAAC,EAAD,CACIC,IAAKD,EAAKxB,GACVA,GAAIwB,EAAKxB,GACTC,QAASuB,EAAKvB,QACdC,iBAAkBW,OAK9B,OACI,yBAAKP,UAAU,kBACVgB,I,MCxBEI,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.399626e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Tile = ({ id, content, callbackFunction }) => {\r\n    const [isTileChecked, setTileChecked] = useState(false);\r\n    \r\n\r\n    const toggleTileIsChecked = () => {\r\n        setTileChecked(!isTileChecked);\r\n        callbackFunction(!isTileChecked, id)\r\n    };\r\n     \r\n    return(\r\n        <div \r\n            className=\"tile\"\r\n            style={{ \r\n                background: isTileChecked ? \"#a61e22\" : \"\",\r\n                textDecoration: isTileChecked ? \"line-through\" : \"\"\r\n            }}\r\n            onClick={toggleTileIsChecked}\r\n        >\r\n            {content}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Tile;","import React from 'react';\r\nimport Tile from './Tile.js';\r\nimport TileData from './../TileData.json';\r\n\r\nconst TileContainer = () => {\r\n\r\n    let bingo = [];\r\n\r\n    const constuctBingoArrayCallback = (checked, id) => {\r\n        if (checked) {\r\n            bingo.push(id);\r\n        } else {\r\n            let index = bingo.indexOf(id);\r\n            if (index > -1) {\r\n                bingo.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        if (bingo.length === TileData.length) {\r\n            alert('BINGO!')\r\n        }\r\n    }\r\n\r\n    const tiles = TileData.map((tile) => {\r\n        return (\r\n            <Tile\r\n                key={tile.id}\r\n                id={tile.id}\r\n                content={tile.content}\r\n                callbackFunction={constuctBingoArrayCallback}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"tile-container\">\r\n            {tiles}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TileContainer;","import React from 'react';\nimport TileContainer from './components/TileContainer.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <TileContainer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}